const knex = require('knex')({    client: 'pg',    connection: {        host: 'postgres',        user: 'postgres',        password: '1691',        database: 'db_test',        port: 5432    }});const createTables = async () => {    await knex.raw('CREATE EXTENSION IF NOT EXISTS "uuid-ossp"'); // Создание расширения "uuid-ossp"    const tableExists = await knex.schema.hasTable('users');    if (!tableExists){    await knex.schema.createTable('users', (table) => {        table.uuid('id').primary().defaultTo(knex.raw('uuid_generate_v4()')); // Тип uuid и значение по умолчанию с использованием knex.raw()        table.string('username').notNullable();        table.string('password').notNullable();        table.string('login').notNullable();    });}    const postsTableExists = await knex.schema.hasTable('posts');    if (!postsTableExists) {    await knex.schema.createTable('posts', (table) => {        table.uuid('id').primary().defaultTo(knex.raw('uuid_generate_v4()')); // Тип uuid и значение по умолчанию с использованием knex.raw()        table.uuid('user_id').notNullable().references('id').inTable('users'); // Внешний ключ ссылающийся на таблицу 'users'        table.text('message').notNullable();        table.text('media_url');        table.timestamp('created_at').defaultTo(knex.raw('current_timestamp')); // Значение по умолчанию с использованием knex.raw()    });    }    console.log('Tables created successfully');    await knex.destroy();};module.exports = createTables;