const  bcrypt  =  require("bcrypt");const  db  =  require('../config/db.js');const  jwt  =  require("jsonwebtoken");require("dotenv").config();exports.registerClient = async (request, response) => {    const { login, password, username} = request.body;    try {        const  data  =  await db.query(`SELECT * FROM users WHERE login= $1;`, [login]); //Checking if user already exists        const  arr  =  data.rows;        if (arr.length  !==  0) {            return  response.status(400).json({                error: "Login already there, No need to register again.",            });        }        else {            bcrypt.hash(password, 10, async (err, hash) => {                if (err)                    response.status(err).json({                        error: "Server error",                    });                db.query('BEGIN;');                const user = {                    login,                    password: hash,                    username                };                let flag = 1;                const {rows} = await db.query('INSERT INTO users (login, password, username) VALUES ($1, $2, $3) RETURNING id', [user.login, user.password, user.username], (err) => {                    if (err) {                        flag = 0;                        console.error(err);                        return response.status(500).json({                            error: "Database error"                        })                    } else {                        flag = 1;                        response.status(200).send({message: 'User added to database'});                    }                });                const userId = rows[0].id;                db.query('COMMIT;');                if (flag) {                    const token = jwt.sign(                        {                            login: user.login,                            userId,                        },                        process.env.SECRET_KEY);                    return response.status(201).json({                        message: 'User registered successfully',                        token: token                    });                }            });        }    }    catch (err) {        await db.query('ROLLBACK;');        console.log(err);        response.status(500).json({            error: "Database error while registring user!",        });    }};exports.loginClient = async (request, response) => {    const { login, password} = request.body;    try {        const data = await db.query(`SELECT * FROM users WHERE login= $1;`, [login])        const user = data.rows;        if (user.length === 0) {            response.status(400).json({                error: "Пользователь не зарегистрирован, сначала зарегистрируйтесь",            });        }        else {            bcrypt.compare(password, user[0].password, (err, result) => {                if (err) {                    response.status(500).json({                        error: "Server error",                    });                } else if (result === true) {                    const token = jwt.sign(                        {                            login: login,                        },                        process.env.SECRET_KEY                    );                    response.status(200).header("auth-token", token).send({ "token": token, user });                }                else {                    if (result !== true)                        response.status(400).json({                            error: "Введите корректные данные!",                        });                }            })        }    } catch (err) {        console.log(err);        response.status(500).json({            error: "Произошла ошибка базы данных при входе в систему!",        });    };};