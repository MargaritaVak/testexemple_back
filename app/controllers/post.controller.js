const  db  =  require('../config/db.js');exports.createPost= async (request, response)=> {    const {userId,message, mediaUrl} = request.body;    const query = 'INSERT INTO posts (user_id, message, media_url) VALUES ($1, $2, $3) RETURNING id';    const values = [userId, message, mediaUrl];    try {        const result = await db.query(query, values);        const postId = result.rows[0].id;        console.log(`Создан новый пост с ID: ${postId}`);        response.json(postId)    } catch (error) {        console.error('Ошибка при создании поста:', error);        throw error;    }}exports.deletePost= async (request, response)=> {    const postId = request.params.id    const query = 'DELETE FROM posts WHERE id = $1';    const values = [postId];    try {        const result = await db.query(query, values);        console.log(`Пост с ID ${postId} успешно удален`);        response.json(result)    } catch (error) {        console.error(`Ошибка при удалении поста с ID ${postId}:`, error);        throw error;    }}exports.updatePost = async (request, response) => {    const postId = request.params.id;    const { message, mediaUrl } = request.body;    const checkQuery = 'SELECT * FROM posts WHERE id = $1';    const checkValues = [postId];    try {        const checkResult = await db.query(checkQuery, checkValues);        if (checkResult.rows.length === 0) {            return response.status(404).json({ error: `Пост с ID ${postId} не найден` });        }        const updateQuery = 'UPDATE posts SET message = $2, media_url = $3 WHERE id = $1';        const updateValues = [postId, message, mediaUrl];        const updateResult = await db.query(updateQuery, updateValues);        console.log(`Пост с ID ${postId} успешно обновлен`);        response.json(updateResult.rows[0]);    } catch (error) {        console.error(`Ошибка при обновлении поста с ID ${postId}:`, error);        throw error;    }};exports.getAllPosts= async (request, response)=> {    const query = 'SELECT posts.id, users.login, posts.message, posts.media_url, posts.created_at\n' +        '    FROM posts\n' +        '    JOIN users ON posts.user_id = users.id';    try {        const result = await db.query(query);        const posts = result.rows;        response.json(posts);    } catch (error) {        console.error('Ошибка при получении постов:', error);        throw error;    }}